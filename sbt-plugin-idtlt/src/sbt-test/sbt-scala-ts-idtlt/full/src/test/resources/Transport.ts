// Generated by ScalaTS 0.5.17-SNAPSHOT: https://scala-ts.github.io/scala-ts/
import * as idtlt from 'idonttrustlikethat';
export const _externalDependencyModules = [idtlt];

declare var exports: any;

export const nsTransport = exports;

import * as nsBusLine from './BusLine';
import * as nsTrainLine from './TrainLine';

export const dependencyModules = [
  nsBusLine,
  nsTrainLine,
];

// Validator for UnionDeclaration Transport
export const idtltTransport = idtlt.union(
  nsBusLine.idtltDiscriminatedBusLine,
  nsTrainLine.idtltDiscriminatedTrainLine);

// Fields are ignored: name

// Deriving TypeScript type from Transport validator
export type Transport = typeof idtltTransport.T;

export const idtltDiscriminatedTransport = idtlt.intersection(
  idtltTransport,
  idtlt.object({
    _type: idtlt.literal('Transport')
  })
);

// Deriving TypeScript type from idtltDiscriminatedTransport validator
export type DiscriminatedTransport = typeof idtltDiscriminatedTransport.T;

export const Transport = {

} as const;

export const idtltTransportKnownValues: ReadonlyArray<Transport> = Object.values(Transport) as ReadonlyArray<Transport>;

export function isTransport(v: any): v is Transport {
  return (
    nsBusLine.isBusLine(v) ||
    nsTrainLine.isTrainLine(v)
  );
}
