// Generated by ScalaTS 0.7.2-SNAPSHOT: https://scala-ts.github.io/scala-ts/

declare var exports: any;

export const nsConstants = exports;

import * as nsGrade from './Grade';
import type { Grade } from './Grade';

export const dependencyModules = [
  nsGrade,
];

export class Constants {
  public readonly code: number & 1 = 1;

  public readonly name: string & "foo" = "foo";

  public readonly LowerGrade: Grade & 0 = 0;

  public readonly list: ReadonlyArray<Grade> = [ this.LowerGrade ];

  public readonly set: ReadonlySet<string> = new Set([ "lorem", "ipsum" ]);

  public readonly dict: Readonly<Map<string, string>> = new Map([ ["A", "value #1"], ["B", this.name] ]);

  public readonly listOfDict: ReadonlyArray<Readonly<Map<string, string>>> = [ new Map([ ["title", "Foo"], ["description", "..."] ]), new Map([ ["title", "Bar"], ["description", "..."] ]) ];

  private static instance: Constants;

  private constructor() {}

  public static getInstance() {
    if (!Constants.instance) {
      Constants.instance = new Constants();
    }

    return Constants.instance;
  }
}

export const ConstantsInhabitant: Constants = Constants.getInstance();

export function isConstants(v: any): v is Constants {
  return (v instanceof Constants) && (v === ConstantsInhabitant);
}

export type ConstantsSingleton = Constants;
