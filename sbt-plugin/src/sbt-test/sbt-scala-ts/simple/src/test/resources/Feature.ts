// Generated by ScalaTS 0.7.0-SNAPSHOT: https://scala-ts.github.io/scala-ts/

declare var exports: any;

export const nsFeature = exports;

import * as nsBar from './Bar';
import * as nsFoo from './Foo';

export const dependencyModules = [
  nsBar,
  nsFoo,
];

export interface FeatureUnion {
}

export function isFeatureUnion(v: any): v is FeatureUnion {
  return (
    typeof v === 'object' && Object.keys(v).length === 0
  );
}

export class FeatureSingleton {
  public readonly Foo: nsFoo.FooSingleton = nsFoo.FooInhabitant;

  public readonly Bar: nsBar.BarSingleton = nsBar.BarInhabitant;

  private static instance: FeatureSingleton;

  private constructor() {}

  public static getInstance() {
    if (!FeatureSingleton.instance) {
      FeatureSingleton.instance = new FeatureSingleton();
    }

    return FeatureSingleton.instance;
  }
}

export const FeatureSingletonInhabitant: FeatureSingleton = FeatureSingleton.getInstance();

export function isFeatureSingleton(v: any): v is FeatureSingleton {
  return (v instanceof FeatureSingleton) && (v === FeatureSingletonInhabitant);
}

export const FeatureInhabitant = FeatureSingletonInhabitant;

export type Feature = FeatureUnion;

export function isFeature(v: any): v is Feature {
  return (
    isFeatureUnion(v)
  );
}