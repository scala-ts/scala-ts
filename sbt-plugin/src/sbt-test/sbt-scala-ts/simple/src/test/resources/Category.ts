// Generated by ScalaTS 0.7.0-SNAPSHOT: https://scala-ts.github.io/scala-ts/

declare var exports: any;

export const nsCategory = exports;

import * as nsIpsum from './Ipsum';
import * as nsLorem from './Lorem';

export const dependencyModules = [
  nsIpsum,
  nsLorem,
];

export interface CategoryUnion {
}

export function isCategoryUnion(v: any): v is CategoryUnion {
  return (
    typeof v === 'object' && Object.keys(v).length === 0
  );
}

export class CategorySingleton {
  public readonly Lorem: nsLorem.LoremSingleton = nsLorem.LoremInhabitant;

  public readonly Ipsum: nsIpsum.IpsumSingleton = nsIpsum.IpsumInhabitant;

  private static instance: CategorySingleton;

  private constructor() {}

  public static getInstance() {
    if (!CategorySingleton.instance) {
      CategorySingleton.instance = new CategorySingleton();
    }

    return CategorySingleton.instance;
  }
}

export const CategorySingletonInhabitant: CategorySingleton = CategorySingleton.getInstance();

export function isCategorySingleton(v: any): v is CategorySingleton {
  return (v instanceof CategorySingleton) && (v === CategorySingletonInhabitant);
}

export const CategoryInhabitant = CategorySingletonInhabitant;

export type Category = CategoryUnion;

export function isCategory(v: any): v is Category {
  return (
    isCategoryUnion(v)
  );
}