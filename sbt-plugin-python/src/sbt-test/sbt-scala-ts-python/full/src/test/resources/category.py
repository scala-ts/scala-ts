# Generated by ScalaTS 0.7.2-SNAPSHOT: https://scala-ts.github.io/scala-ts/

from dataclasses import dataclass  # noqa: F401
import typing  # noqa: F401
import datetime  # noqa: F401
import time  # noqa: F401

from generated import ipsum  # noqa: F401
from generated.ipsum import Ipsum
from generated import lorem  # noqa: F401
from generated.lorem import Lorem


# Declare composite type Category

# Declare union CategoryUnion
CategoryUnion = typing.Union[Ipsum, Lorem]


class CategoryUnionCompanion:
    @classmethod
    def Ipsum(self) -> CategoryUnion:
        return ipsum.IpsumInhabitant

    @classmethod
    def Lorem(self) -> CategoryUnion:
        return lorem.LoremInhabitant


CategoryUnionKnownValues: typing.List[CategoryUnion] = [
    CategoryUnionCompanion.Ipsum(),
    CategoryUnionCompanion.Lorem(),
]


# Declare singleton CategorySingleton
class CategorySingletonInvariantsFactory:
    @classmethod
    def Lorem(self) -> Lorem:
        return lorem.LoremInhabitant

    @classmethod
    def Ipsum(self) -> Ipsum:
        return ipsum.IpsumInhabitant


@dataclass
class ICategorySingletonInvariants:
    Lorem: Lorem
    Ipsum: Ipsum


CategorySingletonInvariants = ICategorySingletonInvariants(
    Lorem=CategorySingletonInvariantsFactory.Lorem(),
    Ipsum=CategorySingletonInvariantsFactory.Ipsum(),
)

Category = CategoryUnion
CategoryCompanion = CategoryUnionCompanion
CategoryKnownValues: typing.List[Category] = CategoryUnionKnownValues
