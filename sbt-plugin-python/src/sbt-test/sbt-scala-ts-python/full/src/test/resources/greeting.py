# Generated by ScalaTS 0.7.2-SNAPSHOT: https://scala-ts.github.io/scala-ts/

from dataclasses import dataclass  # noqa: F401
import typing  # noqa: F401
import datetime  # noqa: F401
import time  # noqa: F401

from generated import bye  # noqa: F401
from generated.bye import Bye
from generated import goodbye  # noqa: F401
from generated.goodbye import GoodBye
from generated import hello  # noqa: F401
from generated.hello import Hello
from generated import hi  # noqa: F401
from generated.hi import Hi
from generated import whatever  # noqa: F401
from generated.whatever import Whatever


# Declare composite type Greeting

# Declare union GreetingUnion
GreetingUnion = typing.Union[Bye, GoodBye, Hello, Hi, Whatever]


class GreetingUnionCompanion:
    @classmethod
    def Bye(self) -> GreetingUnion:
        return bye.ByeInhabitant

    @classmethod
    def GoodBye(self) -> GreetingUnion:
        return goodbye.GoodByeInhabitant

    @classmethod
    def Hello(self) -> GreetingUnion:
        return hello.HelloInhabitant

    @classmethod
    def Hi(self) -> GreetingUnion:
        return hi.HiInhabitant


GreetingUnionKnownValues: typing.List[GreetingUnion] = [
    GreetingUnionCompanion.Bye(),
    GreetingUnionCompanion.GoodBye(),
    GreetingUnionCompanion.Hello(),
    GreetingUnionCompanion.Hi(),
]


# Declare singleton GreetingSingleton
class GreetingSingletonInvariantsFactory:
    @classmethod
    def Hello(self) -> Hello:
        return hello.HelloInhabitant

    @classmethod
    def GoodBye(self) -> GoodBye:
        return goodbye.GoodByeInhabitant

    @classmethod
    def Hi(self) -> Hi:
        return hi.HiInhabitant

    @classmethod
    def Bye(self) -> Bye:
        return bye.ByeInhabitant


@dataclass
class IGreetingSingletonInvariants:
    Hello: Hello
    GoodBye: GoodBye
    Hi: Hi
    Bye: Bye


GreetingSingletonInvariants = IGreetingSingletonInvariants(
    Hello=GreetingSingletonInvariantsFactory.Hello(),
    GoodBye=GreetingSingletonInvariantsFactory.GoodBye(),
    Hi=GreetingSingletonInvariantsFactory.Hi(),
    Bye=GreetingSingletonInvariantsFactory.Bye(),
)

Greeting = GreetingUnion
GreetingCompanion = GreetingUnionCompanion
GreetingKnownValues: typing.List[Greeting] = GreetingUnionKnownValues
