# Generated by ScalaTS 0.5.14-SNAPSHOT: https://scala-ts.github.io/scala-ts/

import typing  # noqa: F401
import datetime  # noqa: F401

import name  # Name


# Declare singleton Constants
class ConstantsInvariants:
    @classmethod
    def code(self) -> int:
        return 1

    @classmethod
    def UnknownName(self) -> name.Name:
        return "unknown"

    @classmethod
    def defaultName(self) -> name.Name:
        return "default"

    @classmethod
    def list(self) -> typing.List[int]:
        return [self.code(), 2]

    @classmethod
    def dict(self) -> typing.Dict[str, typing.List[name.Name]]:
        return {"specific": [self.UnknownName(), self.defaultName(), "*"], "invalid": ["failed"]}

    @classmethod
    def excluded(self) -> typing.List[str]:
        return ["foo", "bar"]

    @classmethod
    def filtered(self) -> typing.List[str]:
        return self.excluded() + ["filtered"]

    @classmethod
    def names(self) -> typing.List[name.Name]:
        return [self.UnknownName(), self.defaultName()] + ["test"]


ConstantsInhabitant = {
    'code': ConstantsInvariants.code(),
    'UnknownName': ConstantsInvariants.UnknownName(),
    'defaultName': ConstantsInvariants.defaultName(),
    'list': ConstantsInvariants.list(),
    'dict': ConstantsInvariants.dict(),
    'excluded': ConstantsInvariants.excluded(),
    'filtered': ConstantsInvariants.filtered(),
    'names': ConstantsInvariants.names(),
}
